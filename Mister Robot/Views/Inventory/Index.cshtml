@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Mister_Robot.Services
@using Mister_Robot.Services.Interfaces

@model IEnumerable<Mister_Robot.Models.Product>
@inject IWishlistService WishlistService
@inject IUserService UserService
@{
   ViewData["Title"] = "Inventory";
   Layout = null;
   var searchTerm = ViewBag.SearchTerm as string;
   var selectedCategory = ViewBag.SelectedCategory as string;
   var categories = ViewBag.Categories as IEnumerable<string>;
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"]</title>
	<link rel="icon" type="image/png" href=" @Url.Content("~/assets/mr_robot_logo.webp")" />
	<link rel="stylesheet" href="@Url.Content("~/css/navbar.css")" />
	<link rel="stylesheet" href="@Url.Content("~/css/inventory.css")" />

</head>

<body class="background-image">

	<header class="header-nav">
		<a href="@Url.Action("Index", "Home")" class="logo">
			<img src="@Url.Content("~/assets/mr_robot_logo.webp")" alt="Mr. Robot Logo" />
		</a>

		<nav class="navbar">
			<a href="@Url.Action("Index", "Home")" class="nav-link">
				<i class="nav-icon">
					<img src="@Url.Content("~/assets/boxicons/bx-home-heart.svg")" alt="home icon" />
				</i>
				Home
			</a>

			<a href="@Url.Action("Index", "Inventory")" class="nav-link">
				<i class="nav-icon">
					<img src="@Url.Content("~/assets/boxicons/bx-box.svg")" alt="inventory icon" />
				</i>
				Inventory
			</a>
			<a href="@Url.Action("Index", "Cart")" class="nav-link">
				<i class="nav-icon">
					<img src="@Url.Content("~/assets/boxicons/cart-regular-24.svg")" alt="cart icon" />
					@* <span class="cart-badge">3</span> *@
				</i>
				Cart
			</a>
			<a href="@Url.Action("Index", "Wishlist")" class="nav-link active">
				<i class="nav-icon">
					<img src="@Url.Content("~/assets/boxicons/bx-heart-circle.svg")" alt="wishlist icon" />
				</i>
				Wishlist
			</a>
			@if (User.IsInRole("Admin"))
			{
				<a href="@Url.Action("Manage", "Inventory")" class="nav-link">
					<i class="nav-icon">
						<img src="@Url.Content("~/assets/boxicons/dashboard-solid-24.svg")" alt="dashboard icon" />
					</i>
					Manage
				</a>
			}
			<a href="@Url.Page("/Account/Manage/Index", new { area = "Identity" })" class="nav-link">
				<i class="nav-icon">
					<img src="@Url.Content("~/assets/boxicons/bx-cog.svg")" alt="settings icon" />
				</i>
				Settings
			</a>

		</nav>
		<partial name="_LoginPartial" />
	</header>
	  
   <div class="container">
      <h1 class="main-title">Browse Our Inventory</h1>

      <!-- Search Bar -->
      <form method="get" class="filter-form">
         <input type="text" name="search" value="@searchTerm" placeholder="Search for products..." />
         <button type="submit">Search</button>
      </form>

       <!-- Sidebar Category Menu -->
      <div class="category-menu">
         <h4>Categories</h4>
         <ul>
            @foreach (var category in ViewBag.Categories)
            {
               <li class="@(category.CategoryId.ToString() == ViewBag.SelectedCategory ? "active-category" : "")">
                  <a href="@Url.Action("Index", new { category = category.CategoryId })">@category.Name</a>
               </li>
            }
            <li class="@(string.IsNullOrEmpty(ViewBag.SelectedCategory) ? "active-category" : "")">
               <a href="@Url.Action("Index")">All Products</a>
            </li>
         </ul>
      </div>

      <!-- Product Cards -->
      <div class="row">
         @foreach (var product in Model)
         {
            <div class="card product-card">
               <!-- Product Image -->
               @if (product.Image != null)
               {
                  <img src="data:image/png;base64,@(Convert.ToBase64String(product.Image))" alt="@product.Name" />
               }
               else
               {
                  <img src="~/assets/default_product_img.jpg" alt="Default Image" />
               }

               <!-- Card Body -->
               <div class="card-body">
                  <h5 class="card-title">@product.Name</h5>
                  <p class="card-brand">@product.Brand</p>
                  <p class="card-price">$@product.Price</p>
                  @if (!string.IsNullOrEmpty(product.Description))
                  {
                     <p class="card-description">@product.Description</p>
                  }
                  <!-- Wishlist Button with Conditional Heart Icon -->
                  <form asp-controller="Wishlist" asp-action="ToggleProductWishlist" method="post" class="wishlist-form">
	                  <input type="hidden" name="productId" value="@product.ProductId" />
    
	                  @{
		                  var userId = UserService.GetCurrentUser().Id;
		                  var wishlist = WishlistService.GetWishlistByUserId(userId);
		                  var isInWishlist = wishlist != null && wishlist.WishlistProducts.Any(wp => wp.ProductId == product.ProductId);
	                  }

	                  <button type="submit" class="wishlist-button" title="Toggle Wishlist">
		                  <span class="heart-icon @(isInWishlist ? "in-wishlist" : "not-in-wishlist")">
			                  ♥
		                  </span>
	                  </button>
                  </form>

                  <!-- Add to Cart Button -->
                  <form method="post" asp-controller="Cart" asp-action="AddToCart">
	                  <input type="hidden" name="productId" value="@product.ProductId" />
	                  <button type="submit" class="btn-add-to-cart">Add to Cart</button>
                  </form>
               </div>
            </div>
         }
      </div>

      @if (!Model.Any())
      {
         <div class="no-products-found">
            <i class="bx bx-error"></i>
            <p>No products found in this category.</p>
         </div>
      }
   </div>

</body>
</html>
